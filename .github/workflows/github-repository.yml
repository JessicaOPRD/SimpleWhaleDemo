# This is a basic workflow to help you get started with Actions

name: CI to GitHub Container Repo (All Except PRs)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repo
        uses: actions/checkout@v2

      # Initiate cache
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Store under GitHub cache to reduce build time and reduce Docker Hub pulls
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Use GitHub Container Registry instead of Docker Hub
      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Include builder and cache properties
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          # Unfortunately this won't work if GitHub perceives you have any uppercase letters
          # in your user name. There are ways to convert to lowercase, but the simplest
          # involves using a third-party step here. Needs more investigating.
          # tags: ghcr.io/${{ github.repository_owner }}/simplewhale:latest
          tags: ghcr.io/jessicaoprd/simplewhale:latest
          # `cache-to` must be executed before `cache-from`? Or possibly this
          # fails on the first run because the cache doesn't exist, but
          # subsequent builds work?
          # "local cache import at /tmp/.buildx-cache not found due to err"
          # https://github.com/docker/buildx/issues/206
          cache-to: type=local,dest=/tmp/.buildx-cache
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
